
description = 'ActivityInfo API Client for GWT'

apply plugin: 'gwt-base'


gwt {
    gwtVersion = project.gwtVersion
}


sourceSets {
    // This source set *generates* the client code for GWT
    generator {
        java {
            srcDir 'src/generator/java'
            compileClasspath += configurations.compile
        }
        resources {
            srcDir 'src/generator/resources'
        }
    }

//    //  This sources set includes the generat*ed* code for GWT
//    generated {
//        java {
//            srcDir "$buildDir/generated"
//            compileClasspath += configurations.compile
//            compileClasspath += sourceSets.main.output
//        }
//    }
}

dependencies {
    generatorCompile libraries.guava
    generatorCompile 'com.squareup:javapoet:1.7.0'
    generatorCompile 'io.swagger:swagger-parser:1.0.19'
    generatorCompile project(":core:model")

    compile project(":core:model")
    compile libraries.guava
    compile libraries.gwt.i18nServer
    gwt     libraries.gwt.user
    gwt     libraries.gwt.guava
}

//idea {
//    module {
//        generatedSourceDirs += file("$buildDir/generated")
//
//
//        scopes.PROVIDED.plus += [ configurations.gwt ]
//        scopes.TEST.plus += [ configurations.generatorCompile ]
//    }
//}

jar {
    from project.sourceSets.main.allSource
    from project.sourceSets.main.output
//    from project.sourceSets.generated.allSource
//    from project.sourceSets.generated.output
}
//
//task generateSources(type: JavaExec) {
//    group = "Verification"
//    description = 'Generates API client sources for GWT'
//
//    dependsOn 'generatorClasses'
//    dependsOn ':api:compileSpec'
//
//    main = 'org.activityinfo.api.tools.GwtClientGenerator'
//    classpath = sourceSets.generator.runtimeClasspath
//    workingDir = projectDir
//    args tasks.getByPath(':api:compileSpec').outputFile
//    args "$buildDir/generated"
//}
//
//compileJava.dependsOn(generateSources)
//
//compileJava.source sourceSets.generated.java, sourceSets.main.java
