

apply plugin: 'gwt-base'

sourceCompatibility = 1.8
targetCompatibility = 1.8

gwt {
    gwtVersion = "2.8.0"
    modules 'org.activityinfo.ui.AppProd'
    maxHeapSize "5g"
}

ext {
    outputDir = "$buildDir/gwt-out"
}

repositories {
    maven { url 'https://maven.sencha.com/repo/gxt-gpl-release/' }
}

task explodedWar(type: Copy) {
    from 'src/main/webapp'
    into "$buildDir/exploded"
}


test {
    // Browser tests that require special handling
    include '**GwtTest'
}

dependencies {
    compile "com.google.guava:guava:21.0"

    gwt libraries.immutables.annotations

    gwt "com.google.gwt:gwt-user:2.8.0"
    gwt 'com.google.guava:guava-gwt:21.0'
    gwt 'com.google.elemental2:elemental2-indexeddb:1.0.0-beta-1'
    gwt libraries.gwt.gson

    gwt project(':core:model')
    gwt project(':store:query');
    gwt project(':i18n')
    gwt project(':clients:gwtrest')
    gwt project(':io:match')
    gwt project(':analysis')


    gwt project(':ui:codemirror')

    gwt libraries.rebar.appcache

    gwt group: 'com.sencha.gxt', name: 'gxt', version: '4.0.0'
    gwt group: 'com.sencha.gxt', name: 'gxt-chart', version: '4.0.0'
    gwt group: 'com.sencha.gxt', name: 'gxt-theme-triton', version: '4.0.0'


    testCompile project(':store:testing')

}

configurations.all {

    // Interferes with GWT-dev
    exclude module: 'gwt-servlet'
}

idea {
    module {
        scopes.PROVIDED.plus += [ configurations.gwt ]
    }
}

task codeserver(type: JavaExec) {

    main = 'com.google.gwt.dev.codeserver.CodeServer'

    // Java sources first, so that changes get picked up on refresh
    classpath project(":i18n").sourceSets.main.java.srcDirs
    classpath project(":i18n").sourceSets.main.resources.srcDirs
    classpath project(":core:promises").sourceSets.main.java.srcDirs
    classpath project(":core:model").sourceSets.main.java.srcDirs
    classpath sourceSets.main.java.srcDirs
    classpath sourceSets.main.resources.srcDirs

    // Generated sources from Annotation processors
    classpath sourceSets.main.output.generatedSourcesDir


    // Compiled java classes and libraries second
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.gwt
    classpath configurations.gwtSdk

    args '-launcherDir', project(':server').buildDir.absolutePath + "/explodedDevMode"
    args 'org.activityinfo.ui.AppDev'

}



task compileApp(type: JavaExec) {

    outputs.dir outputDir
    inputs.dir sourceSets.main.allSource.srcDirs

    // Compiled java classes and libraries second
    classpath sourceSets.main.java.srcDirs
    classpath sourceSets.main.resources.srcDirs
    classpath sourceSets.main.runtimeClasspath
    classpath sourceSets.main.output.generatedSourcesDir
    classpath configurations.gwt
    classpath configurations.gwtSdk

    main = 'com.google.gwt.dev.Compiler'

    args '-logLevel', 'INFO'
    args '-sourceLevel', '1.8'
    args '-war', outputDir
    args 'org.activityinfo.ui.AppProd'

}


task testOffline(type: JavaExec) {

    dependsOn compileTestJava

    classpath configurations.gwtSdk
    classpath configurations.gwt


    classpath sourceSets.main.java.srcDirs
    classpath sourceSets.main.resources.srcDirs
    classpath sourceSets.main.runtimeClasspath
    classpath sourceSets.main.output.generatedSourcesDir
    classpath sourceSets.test.java.srcDirs
    classpath sourceSets.test.runtimeClasspath
    classpath configurations.testCompile

    main = 'junit.textui.TestRunner'

    jvmArgs "-Dgwt.args=-runStyle Manual:1 -style pretty -war ${buildDir}/tesWar -workDir ${buildDir}/testGwtWork"
    args 'org.activityinfo.ui.client.store.offline.OfflineStoreGwtTest'

}


task soyc(type: JavaExec) {

    outputs.dir outputDir
    inputs.dir sourceSets.main.allSource.srcDirs

    // Compiled java classes and libraries second
    classpath sourceSets.main.java.srcDirs
    classpath sourceSets.main.resources.srcDirs
    classpath sourceSets.main.runtimeClasspath
    classpath sourceSets.main.output.generatedSourcesDir
    classpath configurations.gwt
    classpath configurations.gwtSdk

    main = 'com.google.gwt.dev.Compiler'

    args '-logLevel', 'INFO'
    args '-sourceLevel', '1.8'
    args '-war', outputDir
    args '-compileReport'
    args '-extra', "${buildDir}/gwt-extra"
    args 'org.activityinfo.ui.AppProd'

}