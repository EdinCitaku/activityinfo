


ext {
    outputDir = "$buildDir/gwt-out"
}

repositories {
    maven { url 'https://maven.sencha.com/repo/gxt-gpl-release/' }
}

task explodedWar(type: Copy) {
    from 'src/main/webapp'
    into "$buildDir/exploded"
}


jar {
    from project.sourceSets.main.allSource
    from project.sourceSets.main.output
    from project.sourceSets.main.output.generatedSourcesDir
}


test {
    // Browser tests that require special handling
    exclude '**/*GwtTest.*'
}


configurations {
    gwtSdk
}

dependencies {
    compile "com.google.guava:guava:21.0"

    compile libraries.immutables.annotations

    compile libraries.gwt.user
    compile 'com.google.guava:guava-gwt:21.0'
    compile libraries.gwt.gson

    compile project(':model')
    compile project(':store:query');
    compile project(':i18n')
    compile project(':clients:gwtrest')
    compile project(':io:match')
    compile project(':analysis')
    compile project(':ui:icons')
    compile project(':ui:core')

    compile project(':tools:codemirror')
    compile project(':tools:indexeddb')

    compile libraries.rebar.appcache

    compile group: 'com.sencha.gxt', name: 'gxt', version: '4.0.0'
    compile group: 'com.sencha.gxt', name: 'gxt-chart', version: '4.0.0'
    compile group: 'com.sencha.gxt', name: 'gxt-theme-triton', version: '4.0.0'


    testCompile project(':store:testing')
    testCompile project(':tools:indexeddb').sourceSets.test.output

    gwtSdk libraries.gwt.dev

}

configurations.all {

    // Interferes with GWT-dev
    exclude module: 'gwt-servlet'
}


task compileApp(type: JavaExec) {

    outputs.dir outputDir
    inputs.dir sourceSets.main.allSource.srcDirs

    // Compiled java classes and libraries second
    classpath sourceSets.main.java.srcDirs
    classpath sourceSets.main.resources.srcDirs
    classpath sourceSets.main.runtimeClasspath
    classpath sourceSets.main.output.generatedSourcesDir
    classpath configurations.gwtSdk

    main = 'com.google.gwt.dev.Compiler'

    args '-logLevel', 'INFO'
    args '-sourceLevel', '1.8'
    args '-war', outputDir
    args 'org.activityinfo.ui.AppProd'

}

compileApp.onlyIf { !project.hasProperty('skipGwt') }

task testOffline(type: JavaExec) {

    dependsOn compileTestJava

    classpath configurations.gwtSdk

    classpath sourceSets.main.java.srcDirs
    classpath sourceSets.main.resources.srcDirs
    classpath sourceSets.main.runtimeClasspath
    classpath sourceSets.main.output.generatedSourcesDir
    classpath sourceSets.test.java.srcDirs
    classpath sourceSets.test.runtimeClasspath
    classpath configurations.testCompile

    main = 'junit.textui.TestRunner'

    jvmArgs "-Dgwt.args=-runStyle Manual:1 -style pretty -war ${buildDir}/testWar -workDir ${buildDir}/testGwtWork"
    args 'org.activityinfo.ui.client.store.offline.OfflineStoreGwtTest'

}
