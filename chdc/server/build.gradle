
plugins {
    id "java"
    id "war"
    id "org.akhikhl.gretty" version "2.0.0"
    id 'nu.studer.jooq' version '2.0.9'
}

dependencies {
    compile project(':model')
    compile project(':store:apiserver')

    compile libraries.jersey.servlet

    compile 'org.jooq:jooq:3.10.1'
    compile 'com.zaxxer:HikariCP:2.7.2'
    compile 'mysql:mysql-connector-java:5.1.44'

    jooqRuntime 'mysql:mysql-connector-java:5.1.44'
}

war {
    /* Include compiled Javascript application */
    from(project(':chdc:frontend').outputDir) {
        exclude("**/*.symbolMap")
    }
}

tasks.war.dependsOn ':chdc:frontend:compileApp'

jooq {
    version = '3.10.1'
    edition = 'OSS'
    chdc(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.jdbc.Driver'
            url = 'jdbc:mysql://localhost:3306/chdc'
            user = 'root'
            password = 'root'
        }
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            strategy {
                name = 'org.jooq.util.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.util.mysql.MySQLDatabase'
                inputSchema = 'chdc'
                excludes = 'DATABASECHANGELOG | DATABASECHANGELOGLOCK'
                forcedTypes {
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'JSONB?'
                    }
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'INET'
                    }
                }
                // ...
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
                // ...
            }
            target {
                packageName = 'chdc.server.sql'
                directory = project.file('src/main/java')
            }
        }
    }
}