<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  ActivityInfo Server
  %%
  Copyright (C) 2009 - 2013 UNICEF
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as
  published by the Free Software Foundation, either version 3 of the
  License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/gpl-3.0.html>.
  #L%
  -->

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet author="alex" id="36-01">
        <comment>
            Improve query performance on site table
        </comment>
        <addColumn tableName="site">
            <column name="deleted" type="bit" defaultValueNumeric="0">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <sql>
            UPDATE site SET deleted = dateDeleted IS NOT NULL
        </sql>
        <createIndex tableName="site" indexName="site_activity_deleted">
            <column name="deleted"/>
            <column name="ActivityId"/>
        </createIndex>
    </changeSet>
    <changeSet author="alex" id="36-02">
        <comment>
            Keep the database in sync even against other application versions without this change
        </comment>
        <sql splitStatements="false" endDelimiter="//">
            CREATE TRIGGER site_delete_sync
            BEFORE UPDATE
            ON site FOR EACH ROW
            BEGIN
            SET NEW.deleted = (NEW.dateDeleted IS NOT NULL);
            END
        </sql>
    </changeSet>
    <changeSet author="alex" id="36-03">
        <comment>
            Improve query performance on attribute table
        </comment>
        <addColumn tableName="attribute">
            <column name="deleted" type="bit" defaultValueNumeric="0">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <sql>
            UPDATE attribute SET deleted = dateDeleted IS NOT NULL
        </sql>
        <createIndex tableName="attribute" indexName="attribute_group_deleted">
            <column name="deleted"/>
            <column name="AttributeGroupId"/>
        </createIndex>
        <sql splitStatements="false" endDelimiter="//">
            CREATE TRIGGER attribute_delete_sync
            BEFORE UPDATE
            ON attribute FOR EACH ROW
            BEGIN
            SET NEW.deleted = (NEW.dateDeleted IS NOT NULL);
            END
        </sql>
    </changeSet>
    <changeSet author="alex" id="36-04">
        <comment>
            Improve query performance on indicator table
        </comment>
        <addColumn tableName="indicator">
            <column name="deleted" type="bit" defaultValueNumeric="0">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <sql>
            UPDATE indicator SET deleted = dateDeleted IS NOT NULL
        </sql>
        <createIndex tableName="indicator" indexName="indicator_activity_deleted">
            <column name="deleted"/>
            <column name="ActivityId"/>
        </createIndex>
        <sql splitStatements="false" endDelimiter="//">
            CREATE TRIGGER indicator_delete_sync
            BEFORE UPDATE
            ON indicator FOR EACH ROW
            BEGIN
            SET NEW.deleted = (NEW.dateDeleted IS NOT NULL);
            END
        </sql>
    </changeSet>
    <changeSet author="yuriyz" id="36-05">
        <comment>
            Improve query performance on adminentity table
        </comment>
        <createIndex tableName="adminentity" indexName="adminentity_id_and_deleted">
            <column name="deleted"/>
            <column name="AdminLevelId"/>
        </createIndex>
        <sql>
            UPDATE adminlevel SET version = 1 WHERE version = 0
        </sql>
    </changeSet>
    <changeSet author="yuriyz" id="36-06">
        <comment>
            Improve query performance on userpermission table
        </comment>
        <createIndex tableName="userpermission" indexName="userpermission_databaseid_and_userid">
            <column name="DatabaseId"/>
            <column name="UserId"/>
        </createIndex>
    </changeSet>
    <changeSet author="yuriyz" id="36-07">
        <comment>
            Improve query performance of site table
        </comment>
        <createIndex tableName="site" indexName="site_deleted_activityid_siteid">
            <column name="deleted"/>
            <column name="ActivityId"/>
            <column name="SiteId"/>
        </createIndex>
    </changeSet>
    <changeSet author="alex" id="36-08">
        <comment>
            Improve query performance of monthly reports scan by pushing down values
            form site table.
        </comment>
        <sql>
            alter table reportingperiod add column activityId int
        </sql>
        <sql>
            update reportingperiod set activityId = (select activityid from site s where s.siteid = reportingperiod.siteid)
        </sql>
        <sql>
            alter table reportingperiod add column deleted bit(1) not null default 0
        </sql>
        <sql>
            update reportingperiod set activityId = (select deleted from site s where s.siteid = reportingperiod.siteid);
        </sql>
        <createIndex tableName="reportingperiod" indexName="reportingperiod_deleted_activity_sort">
            <column name="deleted"/>
            <column name="ActivityId"/>
            <column name="ReportingPeriodId"/>
        </createIndex>
    </changeSet>
    <changeSet id="36-09" author="alex">
        <comment>
            Improve query performance of location admin links
        </comment>
        <sql>
            alter table locationadminlink add column adminLevelId int
        </sql>
        <sql>
            update locationadminlink set adminlevelid = (select adminlevelid from adminentity e where e.adminentityid=locationadminlink.adminentityid)
        </sql>
        <sql splitStatements="false" endDelimiter="//">
            CREATE TRIGGER locationadminlink
            BEFORE INSERT
            ON locationadminlink FOR EACH ROW
            BEGIN
            SET NEW.adminlevelId = (SELECT adminlevelid FROM adminentity e WHERE e.adminentityId=NEW.adminentityId);
            END
        </sql>
    </changeSet>
    <changeSet id="36-10" author="alex">
        <comment>
            Enforce consistency rules in denormalized reportingperiod values
        </comment>
        <sql splitStatements="false" endDelimiter="//">
            CREATE TRIGGER reportingperiod
            BEFORE INSERT
            ON reportingperiod FOR EACH ROW
            BEGIN
            SET NEW.activityId = (SELECT activityId FROM site s WHERE s.siteId=NEW.siteId);
            END
        </sql>
    </changeSet>
    <changeSet author="alex" id="36-11">
        <comment>
            Correctly sync delete flag on reportingperiod with site table
        </comment>
        <sql>
            update reportingperiod set deleted = IFNULL((select deleted from site s where s.siteid = reportingperiod.siteid), 0)
        </sql>
        <sql>
            update reportingperiod set activityId = (select activityid from site s where s.siteid = reportingperiod.siteid)
        </sql>
    </changeSet>
</databaseChangeLog>