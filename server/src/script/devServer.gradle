import com.google.appengine.task.RunTask

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.google.appengine:gradle-appengine-plugin:1.9.18'
    }
}

task appengineStartAT(type: RunTask) {
    dependsOn 'appengineExplodeApp', 'setupAcceptanceTestDatabase'
    description = "Starts a local AppEngine Development Server for Acceptance Testing in the background"
    group = "Google App Engine"

    daemon = true
    jvmFlags = [ "-Dactivityinfo.config=${acceptanceTestConfigFile.absolutePath}"]
}

task appengineRunAT(type: RunTask) {
    dependsOn 'appengineExplodeApp', 'setupAcceptanceTestDatabase'
    description = "Runs a local AppEngine Development Server for Acceptance Testing"
    group = "Google App Engine"

    jvmFlags = [ "-Dactivityinfo.config=${acceptanceTestConfigFile.absolutePath}"]
}


task appengineExplodeInstrumentedApp  {
    group = "Google App Engine"
    description = "Explodes the instrumented WAR into a directory"
    ext {
        warDir = project.file("$buildDir/instrumented-app")
    }
    dependsOn {
        'instrumentedWar'
    }
    doLast {
        ant.unzip(src: instrumentedWar.archivePath, dest: warDir)
    }
}

task appengineStartInstrumentedAT(type: com.google.appengine.task.RunTask) {

    group = "Google App Engine"
    description = "Runs a local AppEngine Dev Server instrumented for measuring test coverage"

    dependsOn 'setupAcceptanceTestDatabase'
    dependsOn 'appengineExplodeInstrumentedApp'

    httpPort = 8080
    daemon = true
    explodedAppDirectory = appengineExplodeInstrumentedApp.warDir

    def jacocoAgent = project.zipTree(configurations.jacocoAgent.singleFile)
    def jacocoAgentJar = jacocoAgent.filter { it.name == 'jacocoagent.jar' }.singleFile.absolutePath

    logger.info("Starting DevServer with jacoco agent path: ${jacocoAgentJar}.")


    jvmFlags = ["-Dactivityinfo.config=${acceptanceTestConfigFile.absolutePath}",
                "-javaagent:${jacocoAgentJar}=destfile=${jacocoAcceptanceDataFile}"
    ]
}