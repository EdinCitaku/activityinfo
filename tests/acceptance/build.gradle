

dependencies {

    testCompile libraries.junit
    testCompile libraries.guice
    testCompile libraries.jersey.client
    testCompile libraries.jersey.json
    testCompile libraries.cucumber.java
    testCompile libraries.cucumber.junit
    testCompile libraries.cucumber.guice
    testCompile libraries.jsr305
    compile libraries.jdbc.mysql

    testCompile 'org.seleniumhq.selenium:selenium-java:2.43.0'
    testCompile 'com.saucelabs:sauce_junit:2.1.13'
    testCompile 'com.github.detro:phantomjsdriver:1.2.0'
    testCompile 'org.yaml:snakeyaml:1.14'
    testCompile 'org.apache.commons:commons-pool2:2.0'
    testCompile 'joda-time:joda-time:2.5'
}


task acceptanceTest() {
    description = 'Runs acceptance test suite'
    dependsOn 'testClasses'

    def testUrl
    if(!project.hasProperty("testUrl")) {
        dependsOn ':server:appengineStart'
        finalizedBy ':server:appengineStop'
        testUrl = "http://localhost:8080"
        
    } else {
        testUrl = project.property("testUrl")
    }
    
    doLast {
        try {
            
            println "Running acceptance tests against ${testUrl}..."
            
            project.javaexec {
                
                classpath sourceSets.test.runtimeClasspath
                main = 'cucumber.api.cli.Main'
                args = ['src/test/resources',
                        '--plugin', 'org.activityinfo.test.harness.ConsoleReporter',
                        '--plugin', 'html:build/cucumber-reports',
                        '--glue', 'org.activityinfo.test',
                        '--tags', '@web,@api']

                systemProperty 'test.url', testUrl
                systemProperty 'webdriver', 'chrome'
                systemProperty 'webdriver.chrome.silentOutput', 'true'
                systemProperty 'acceptanceTestLogFile', new File(project.buildDir, "acceptance-test-web.log").absolutePath
            }
        } finally {
            def reportsDir = new File(project.buildDir, "cucumber-reports")
            def reportsIndex = new File(reportsDir, "index.html")
            println "Report: ${reportsIndex.toURI().toURL()}"
        }
    }
}
